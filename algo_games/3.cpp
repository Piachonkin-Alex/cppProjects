//Штирлиц и Мюллер стреляют по очереди. В очереди n человек,
// стоящих друг за другом. Каждым выстрелом убивается один из стоящих.
// Кроме того, если у кого-то из стоящих в очереди убиты все его соседи,
// то этот человек в ужасе убегает. Проигрывает тот, кто не может ходить.
// Первым стреляет Штирлиц. Требуется определить, кто выиграет при оптимальной
// игре обеих сторон, и если победителем будет Штирлиц, то найти все
// возможные первые ходы, ведущие к его победе.
//
//Формат ввода
//Входной файл содержит единственное число n (2≤ n≤ 5000) — количество человек в
//очереди.
//
//Формат вывода
//Если выигрывает Мюллер, выходной файл должен состоять из единственного слова
// Mueller. Иначе в первой строке необходимо вывести слово Schtirlitz,
// а в последующих строках — номера людей в очереди, которых мог бы
// первым ходом убить Штирлиц для достижения своей победы.
// Номера необходимо выводить в порядке возрастания.
#include <bits/stdc++.h>

using namespace std;

int main() {
  int n;
  cin >> n;
  vector<int> f(n + 1);
  for (int i = 2; i <= n; ++i) {
    set<int> for_mex;
    for (int j = 1; j <= i; ++j) {
      for_mex.insert(f[j - 1] ^ f[i - j]);
    }
    int val = 0;
    while (true) {
      if (!for_mex.count(val)) {
        break;
      } else {
        ++val;
      }
    }
    f[i] = val;
  }
  if (!f[n]) {
    cout << "Mueller";
    return 0;
  } else {
    cout << "Schtirlitz\n";
  }
  for (int j = 1; j <= n; ++j) {
    int q = f[j - 1] ^ f[n - j];
    if (!q) {
      cout << j << '\n';
    }
  }
}
